<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>分布式锁 on 网站标题</title><link>https://heeexy.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link><description>Recent content in 分布式锁 on 网站标题</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 16 Jul 2020 23:47:00 +0000</lastBuildDate><atom:link href="https://heeexy.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/index.xml" rel="self" type="application/rss+xml"/><item><title>Redisson分布式锁报错问题排查</title><link>https://heeexy.com/posts/redisson%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/</link><pubDate>Thu, 16 Jul 2020 23:47:00 +0000</pubDate><guid>https://heeexy.com/posts/redisson%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/</guid><description>故障 业务线测试同学反馈压测时，有以下报错日志：
java.lang.IllegalMonitorStateException: attempt to unlock lock, not locked by current thread by node id: def1bd2c-1f49-4802-b635-5ea78543c033 thread-id: 109 at org.redisson.RedissonLock.unlock(RedissonLock.java:366) 先抛结论 建议遇到类似问题的人先检查项目中是否确保了 redissonClient 的单例。（单线程当然也是必须的，不过排查起来很简单，估计看到文章的人首先已经排查过单线程的问题了）
本次报错是因为:
redissonClient 虽然是单例的静态成员变量，但初始化时未加锁，而是简单使用
private static RedissonClient redisson = null; public static RedissonClient getRedisson(){ if(redisson == null){ RedissonManager.init(); //初始化 } return redisson; } 加锁解锁没有同一个 lock，而是每次都使用getRedisson().getLock(key) 。导致解锁时从另一个 redissonClient 并没有获取到锁。 换言之，报错里的not locked by current thread by node id: def1bd2c-1f49-4802-b635-5ea78543c033 thread-id: 109 其实关键问题在于by node id ，而不是线程id。
定位问题依据 不需要改代码、加日志甚至debug，只需要搜索日志里是否有两行
13:58:07.972 [main] INFO org.</description></item></channel></rss>