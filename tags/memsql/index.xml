<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>MemSQL on 网站标题</title><link>https://heeexy.com/tags/memsql/</link><description>Recent content in MemSQL on 网站标题</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://heeexy.com/tags/memsql/index.xml" rel="self" type="application/rss+xml"/><item><title>MemSQL简介</title><link>https://heeexy.com/posts/memsql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://heeexy.com/posts/memsql/</guid><description>为什么要看MemSQL 因为 MemSQL 自称突出一个快！而我们团队的数据平台正需要一个ms级别查询的数据库，因此花了一点时间来调研 MemSQL 。
初体验结果 MemSQL与我们期望的ms级别查询相差甚远，最简单的查询也通常是500ms返回，并不能应对线上的高并发实时查询系统。秒级查询已经有presto等各种大数据组件，对于我们团队已经没有理由再来深入使用MemSQL。
MemSQL 其实有很多优点，有完善的文档，精致的页面管理工具，方便的安装，甚至一键导入大量数据来方便用户体验 （就差把sql的耗时贴出来了，要是贴出来就省了我调研的时间了），可惜在同一梯队还有太多免费、开源、有活跃社区的竞争对手。
特点 MemSQL属于商业公司，免费4 units. (每8核32G 为1 unit)，不开源 自带portal界面管理，MemSQL Studio，自带安装工具 完全支持mysql语法，jdbc，增删改查 支持 in-memory rowstore &amp;amp;&amp;amp; on-disk columnstore 大吞吐量数据写入(loading TPC-H SF100 (approximately 100 GBs of row files) will take around four minutes) exactly-once aggregator节点运行sql，聚合结果；leaf节点存储&amp;amp;处理数据 数据导入 file , 指定分隔符 Streaming (Kafka , S3 , Azure Blob , Filesystem) 通过Pipelines MySQL (sql文件) 选择 shard key (类似ES的routing) Using a column or set of columns unique enough to minimize skew.</description></item></channel></rss>